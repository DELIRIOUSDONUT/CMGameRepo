{"version":3,"sources":["file:///Users/admin/Documents/GitHub/CMGameRepo/assets/Scripts/BGScaler.ts"],"names":["_decorator","Component","view","ccclass","property","BGScaler","onLoad","sprite","node","getComponent","UITransform","screenSize","getVisibleSize","spriteSize","spriteFrame","originalSize","console","log","width","height","scale","Math","max","maxSqSize","setContentSize","setScale","start","update","deltaTime"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAwCC,MAAAA,I,OAAAA,I;;;;;;;;;OACvD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;0BAGjBK,Q,WADZF,OAAO,CAAC,UAAD,C,gBAAR,MACaE,QADb,SAC8BJ,SAD9B,CACwC;AAE1BK,QAAAA,MAAM,GAAS;AACrB,cAAMC,MAAe,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuB,WAAvB,CAAxB;AACA,cAAMC,WAAyB,GAAG,KAAKF,IAAL,CAAUC,YAAV,CAAuB,gBAAvB,CAAlC;AACA,cAAME,UAAU,GAAGT,IAAI,CAACU,cAAL,EAAnB;AACA,cAAMC,UAAU,GAAGN,MAAM,CAACO,WAAP,CAAmBC,YAAtC;AAEAC,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCN,UAAU,CAACO,KAA/C;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCN,UAAU,CAACQ,MAAhD;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCJ,UAAU,CAACK,KAA/C;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCJ,UAAU,CAACM,MAAhD;AAEA,cAAMC,KAAK,GAAGC,IAAI,CAACC,GAAL,CACVT,UAAU,CAACK,KAAX,GAAmBP,UAAU,CAACO,KADpB,EAEVL,UAAU,CAACM,MAAX,GAAoBR,UAAU,CAACQ,MAFrB,CAAd;AAKA,cAAMI,SAAS,GAAGF,IAAI,CAACC,GAAL,CAASX,UAAU,CAACO,KAApB,EAA2BP,UAAU,CAACQ,MAAtC,CAAlB;AACAT,UAAAA,WAAW,CAACc,cAAZ,CAA2BD,SAA3B,EAAsCA,SAAtC;AACA,eAAKf,IAAL,CAAUiB,QAAV,CAAmBL,KAAnB,EAA0BA,KAA1B,EAAiC,CAAjC;AAEH;;AACDM,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA7BmC,O","sourcesContent":["import { _decorator, Component, Node, UITransform , Sprite , view } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BGScaler')\nexport class BGScaler extends Component {\n\n    protected onLoad(): void {\n        const sprite : Sprite = this.node.getComponent(\"cc.Sprite\") as Sprite;\n        const UITransform : UITransform = this.node.getComponent(\"cc.UITransform\") as UITransform;\n        const screenSize = view.getVisibleSize();\n        const spriteSize = sprite.spriteFrame.originalSize;\n\n        console.log(\"screenSize width is \", screenSize.width);\n        console.log(\"screenSize height is \", screenSize.height);\n        console.log(\"spriteSize width is \", spriteSize.width);\n        console.log(\"spriteSize height is \", spriteSize.height);\n\n        const scale = Math.max(\n            spriteSize.width / screenSize.width,\n            spriteSize.height / screenSize.height\n        );\n\n        const maxSqSize = Math.max(screenSize.width, screenSize.height);\n        UITransform.setContentSize(maxSqSize, maxSqSize);\n        this.node.setScale(scale, scale, 1);\n\n    }\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n"]}