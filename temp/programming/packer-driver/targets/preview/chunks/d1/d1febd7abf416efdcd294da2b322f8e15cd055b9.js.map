{"version":3,"sources":["file:///Users/admin/Documents/GitHub/CMGameRepo/assets/Scripts/CardScript.ts"],"names":["_decorator","Component","CardSelectEvent","ccclass","property","CardScript","FlippedUp","CardType","CardID","CardSprite","BackSprite","SpriteFrame","AudioSource","start","update","deltaTime","setCardType","cardType","console","log","label","node","getComponentInChildren","string","setFlipStatus","flippedUp","playOneShot","clip","spriteFrame","init","cardID","getComponent","setSprite","cardSprite","backSprite","onCardSelected","dispatchEvent","disable","enabled"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AAEZC,MAAAA,e,iBAAAA,e;;;;;;;;;OADH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;4BAIjBK,U,WADZF,OAAO,CAAC,YAAD,C,gBAAR,MACaE,UADb,SACgCJ,SADhC,CAC0C;AAAA;AAAA;AAAA,eACtCK,SADsC;AAAA,eAEtCC,QAFsC;AAAA,eAGtCC,MAHsC;AAAA,eAItCC,UAJsC;AAAA,eAKtCC,UALsC;AAAA,eAMtCC,WANsC;AAAA,eAOtCC,WAPsC;AAAA;;AAQtCC,QAAAA,KAAK,GAAG,CACP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEDC,QAAAA,WAAW,CAACC,QAAD,EAAkB;AACzB,eAAKV,QAAL,GAAgBU,QAAhB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAKZ,QAAvC,EAFyB,CAIzB;;AACA,cAAIa,KAAa,GAAG,KAAKC,IAAL,CAAUC,sBAAV,CAAiC,UAAjC,CAApB;AACAF,UAAAA,KAAK,CAACG,MAAN,GAAe,KAAKhB,QAApB;AAEH;;AAEDiB,QAAAA,aAAa,CAACC,SAAD,EAAqB;AAC9B,eAAKnB,SAAL,GAAiBmB,SAAjB;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKX,MAAzB,EAAiC,mBAAjC,EAAsD,KAAKF,SAA3D,EAF8B,CAG9B;;AACA,cAAG,KAAKG,UAAL,IAAmB,IAAnB,IAA2B,KAAKC,UAAL,IAAmB,IAAjD,EAAsD;AAClD,gBAAG,KAAKJ,SAAR,EAAkB;AACd,mBAAKM,WAAL,CAAiBc,WAAjB,CAA6B,KAAKd,WAAL,CAAiBe,IAA9C;AACA,mBAAKhB,WAAL,CAAiBiB,WAAjB,GAA+B,KAAKnB,UAApC;AACH,aAHD,MAII;AACA,mBAAKE,WAAL,CAAiBiB,WAAjB,GAA+B,KAAKlB,UAApC;AACH;AACJ;AACJ;;AAEDmB,QAAAA,IAAI,CAACJ,SAAD,EAAsBR,QAAtB,EAAyCa,MAAzC,EAAyD;AACzDZ,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,eAAKX,MAAL,GAAcsB,MAAd;AACA,eAAKd,WAAL,CAAiBC,QAAjB;AACA,eAAKO,aAAL,CAAmBC,SAAnB;AACA,eAAKhB,UAAL,GAAkB,IAAlB;AACA,eAAKC,UAAL,GAAkB,IAAlB;AACA,eAAKC,WAAL,GAAmB,KAAKU,IAAL,CAAUU,YAAV,CAAuB,WAAvB,CAAnB;AACA,eAAKnB,WAAL,GAAmB,KAAKS,IAAL,CAAUU,YAAV,CAAuB,gBAAvB,CAAnB;AACAb,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;;AAEDa,QAAAA,SAAS,CAACC,UAAD,EAA2BC,UAA3B,EAAoD;AACzD,eAAKzB,UAAL,GAAkBwB,UAAlB;AACA,eAAKvB,UAAL,GAAkBwB,UAAlB;;AACA,cAAG,KAAK5B,SAAR,EAAkB;AACd,iBAAKK,WAAL,CAAiBiB,WAAjB,GAA+B,KAAKnB,UAApC;AACH,WAFD,MAGI;AACA,iBAAKE,WAAL,CAAiBiB,WAAjB,GAA+B,KAAKlB,UAApC;AACH;;AACDQ,UAAAA,OAAO,CAACC,GAAR,CAAYc,UAAZ,EAAwBC,UAAxB;AACH,SA9DqC,CAgEtC;;;AACAC,QAAAA,cAAc,GAAE;AACZ;AACA;AACA,eAAKd,IAAL,CAAUe,aAAV,CAAwB;AAAA;AAAA,kDAAoB,IAApB,CAAxB;AACH;;AAEDC,QAAAA,OAAO,GAAE;AACL;AACA,eAAKhB,IAAL,CAAUU,YAAV,CAAuB,WAAvB,EAAoCO,OAApC,GAA8C,KAA9C;AACA,eAAKjB,IAAL,CAAUU,YAAV,CAAuB,WAAvB,EAAoCO,OAApC,GAA8C,KAA9C;AACH;;AA3EqC,O","sourcesContent":["import { _decorator, Component, Node , Event , Label, Sprite, SpriteFrame, AudioSource } from 'cc';\nconst { ccclass, property } = _decorator;\nimport { CardSelectEvent } from \"./CardSelectEvent\";\n\n@ccclass('CardScript')\nexport class CardScript extends Component {\n    FlippedUp : boolean;\n    CardType : String;\n    CardID : number;\n    CardSprite : SpriteFrame;\n    BackSprite : SpriteFrame;\n    SpriteFrame : Sprite;\n    AudioSource : AudioSource;\n    start() {\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    setCardType(cardType: String){\n        this.CardType = cardType;\n        console.log(\"Card type set to: \", this.CardType);\n\n        // For testing\n        let label : Label = this.node.getComponentInChildren(\"cc.Label\") as Label;\n        label.string = this.CardType as string;\n\n    }\n\n    setFlipStatus(flippedUp : boolean){\n        this.FlippedUp = flippedUp;\n        console.log(\"ID: \", this.CardID, \"Card flipped up: \", this.FlippedUp);\n        // Add animation here based on flip status\n        if(this.CardSprite != null && this.BackSprite != null){\n            if(this.FlippedUp){\n                this.AudioSource.playOneShot(this.AudioSource.clip);\n                this.SpriteFrame.spriteFrame = this.CardSprite;\n            }\n            else{\n                this.SpriteFrame.spriteFrame = this.BackSprite;\n            }\n        }\n    }\n\n    init(flippedUp : boolean, cardType : String, cardID : number){\n        console.log(\"---INIT---\");\n        this.CardID = cardID;\n        this.setCardType(cardType);\n        this.setFlipStatus(flippedUp);\n        this.CardSprite = null;\n        this.BackSprite = null;\n        this.SpriteFrame = this.node.getComponent(\"cc.Sprite\") as Sprite;\n        this.AudioSource = this.node.getComponent(\"cc.AudioSource\") as AudioSource;\n        console.log(\"---END CARD INIT---\");\n    }\n\n    setSprite(cardSprite : SpriteFrame, backSprite : SpriteFrame){\n        this.CardSprite = cardSprite;\n        this.BackSprite = backSprite;\n        if(this.FlippedUp){\n            this.SpriteFrame.spriteFrame = this.CardSprite;\n        }\n        else{\n            this.SpriteFrame.spriteFrame = this.BackSprite;\n        }\n        console.log(cardSprite, backSprite);\n    }\n\n    // For observer-publisher pattern, when card is selected, emit to card controller\n    onCardSelected(){\n        //console.log(\"Selected, attempt to emit event\");\n        //this.node.emit(\"card-selected\", this);\n        this.node.dispatchEvent(new CardSelectEvent(this));\n    }\n\n    disable(){\n        //this.node.active = false;\n        this.node.getComponent(\"cc.Sprite\").enabled = false;\n        this.node.getComponent(\"cc.Button\").enabled = false;\n    }\n\n}\n\n"]}